<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="AirsoftBmsApp.View.Pages.MapPage"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:sensors="clr-namespace:Microsoft.Maui.Devices.Sensors;assembly=Microsoft.Maui.Essentials"
             xmlns:langs="clr-namespace:AirsoftBmsApp.Resources.Languages"
             xmlns:viewModel="clr-namespace:AirsoftBmsApp.ViewModel.MapViewModel"
             xmlns:buttons="clr-namespace:AirsoftBmsApp.View.ContentViews.Buttons"
             xmlns:dialogs="clr-namespace:AirsoftBmsApp.View.ContentViews.Dialogs"
             xmlns:customMap="clr-namespace:AirsoftBmsApp.View.ContentViews.CustomMap"
             BackgroundColor="{toolkit:AppThemeResource AppBackground}"
             x:DataType="viewModel:MapViewModel"
             >
    <Grid
        RowDefinitions="*,auto"
        ColumnDefinitions="*,*"
        >
        <customMap:CustomMap 
            Grid.Row="0"
            Grid.ColumnSpan="2"
            x:Name="map"
            MapType="Satellite"
            IsShowingUser="True"
            CustomPins="{Binding MapPins}"
            BindableMapElements="{Binding MapElements}"
            />

        <Border
            Grid.Row="1"
            Grid.Column="0"
            StrokeShape="RoundRectangle 15"
            StrokeThickness="2"
            Stroke="{toolkit:AppThemeResource Danger}"
            Margin="10,10,5,10"
            IsVisible="True"
        >
            <Border.Triggers>
                <DataTrigger
                        TargetType="Border"
                        Binding="{Binding IsLoading}"
                        Value="true"
                        >
                    <Setter Property="Stroke" Value="{toolkit:AppThemeResource Outline}"/>
                </DataTrigger>
                <DataTrigger
                        TargetType="Border"
                        Binding="{Binding Player.IsDead}"
                        Value="true"
                        >
                    <Setter Property="IsVisible" Value="False"/>
                </DataTrigger>
            </Border.Triggers>

            <Button 
                BackgroundColor="Transparent"
                TextColor="{toolkit:AppThemeResource Danger}"
                BorderWidth="2"
                FontFamily="{StaticResource GlobalFont}" 
                HorizontalOptions="Fill"
                Text="{Static langs:AppResources.HitButtonText}"
                IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}"
                Command="{Binding ReportDeathCommand}"
                FontSize="20"
                Padding="0"
            >
                <Button.Triggers>
                    <DataTrigger
                        TargetType="Button"
                        Binding="{Binding IsLoading}"
                        Value="true"
                        >
                        <Setter Property="TextColor" Value="{toolkit:AppThemeResource Outline}"/>
                    </DataTrigger>
                </Button.Triggers>
            </Button>
        </Border>

        <Border
            Grid.Row="1"
            Grid.Column="1"
            StrokeShape="RoundRectangle 15"
            StrokeThickness="2"
            Stroke="{toolkit:AppThemeResource Primary}"
            Margin="5,10,10,10"
            IsVisible="True"
            >
            <Border.Triggers>
                <DataTrigger
                        TargetType="Border"
                        Binding="{Binding IsLoading}"
                        Value="true"
                        >
                    <Setter Property="Stroke" Value="{toolkit:AppThemeResource Outline}"/>
                </DataTrigger>
                <DataTrigger
                        TargetType="Border"
                        Binding="{Binding Player.IsDead}"
                        Value="true"
                        >
                    <Setter Property="IsVisible" Value="False"/>
                </DataTrigger>
            </Border.Triggers>

            <Button 
                BackgroundColor="Transparent"
                TextColor="{toolkit:AppThemeResource Primary}"
                BorderWidth="2"
                FontFamily="{StaticResource GlobalFont}" 
                HorizontalOptions="Fill"
                Text="{Static langs:AppResources.KillButtonText}"
                Command="{Binding ReportKillCommand}"
                IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}"
                FontSize="20"
                Padding="0"
            >
                <Button.Triggers>
                    <DataTrigger
                        TargetType="Button"
                        Binding="{Binding IsLoading}"
                        Value="true"
                        >
                        <Setter Property="TextColor" Value="{toolkit:AppThemeResource Outline}"/>
                    </DataTrigger>
                </Button.Triggers>
            </Button>
        </Border>

        <Border
            Grid.Row="1"
            Grid.ColumnSpan="2"
            StrokeShape="RoundRectangle 15"
            StrokeThickness="2"
            Stroke="{toolkit:AppThemeResource Danger}"
            Margin="5,10,10,10"
            IsVisible="False"
            >
            <Border.Triggers>
                <DataTrigger
                        TargetType="Border"
                        Binding="{Binding IsLoading}"
                        Value="true"
                        >
                    <Setter Property="Stroke" Value="{toolkit:AppThemeResource Outline}"/>
                </DataTrigger>
                <DataTrigger
                        TargetType="Border"
                        Binding="{Binding Player.IsDead}"
                        Value="true"
                        >
                    <Setter Property="IsVisible" Value="True"/>
                </DataTrigger>
            </Border.Triggers>

            <Button 
                BackgroundColor="Transparent"
                TextColor="{toolkit:AppThemeResource Danger}"
                BorderWidth="2"
                FontFamily="{StaticResource GlobalFont}" 
                HorizontalOptions="Fill"
                Text="{Static langs:AppResources.RespawnButtonText}"
                Command="{Binding RespawnCommand}"
                IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}"
                FontSize="20"
                Padding="0"
            >
                <Button.Triggers>
                    <DataTrigger
                        TargetType="Button"
                        Binding="{Binding IsLoading}"
                        Value="true"
                        >
                        <Setter Property="TextColor" Value="{toolkit:AppThemeResource Outline}"/>
                    </DataTrigger>
                </Button.Triggers>
            </Button>
        </Border>

        <dialogs:MapActionDialog 
            Grid.ColumnSpan="2"
            Grid.RowSpan="2"
            ActionDialogState="{Binding ActionDialogState, Mode=TwoWay}"
            MarkEnemyCommand="{Binding MarkEnemyCommand}"
            OrderToMoveCommand="{Binding OrderMoveCommand}"
            OrderToDefendCommand="{Binding OrderDefendCommand}"
            AddSpawnZoneCommand="{Binding AddSpawnZoneCommand}"
            />

        <Grid 
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.ColumnSpan="2"
            BackgroundColor="#80000000" 
            IsVisible="{Binding Room.Battle.IsActive, Converter={StaticResource InverseBoolConverter}}"
            >

            <Grid.GestureRecognizers>
                <TapGestureRecognizer/>
            </Grid.GestureRecognizers>

            <Label Text="{Static langs:AppResources.BattleIsPausedMapMessage}"
            TextColor="White"
            FontSize="24"
            FontFamily="{StaticResource GlobalFont}" 
            HorizontalOptions="Center"
            VerticalOptions="Center" />
        </Grid>
    </Grid>
</ContentView>